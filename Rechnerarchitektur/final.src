;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Da gibts ne Zeichnung für @Waldemar
; 
; Verknüpfung von zwei 4bit zahlen 
;
; Gabriel Zachmann
; 12.12.16
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	Device 16F84

PCL equ 2
STATUS EQU 3
BANK equ 5
PortA equ 5
PortB equ 6
A equ 0CH
B equ 0DH
S equ 0EH

; |S1|S0|C            |
; |--|--|-------------|
; |0 |0 |A AND B      |
; |0 |1 |A OR B       |
; |1 |0 |A XOR B      |
; |1 |1 |2er Kompl. A |

init		bsf 	status, bank 	;schaltet auf Bank1
			movlw	11110000B		;lädt Maske in w
			movwf	PortA			;setzt TrisA0-3 auf 0, 0===Ausgang
									;PortB ist Eingang, da das der default value ist (muss nicht explizit gesetzt werden)
			bcf 	status, bank 	;schaltet auf Bank0
			
go			movf	PortB, w		;lädt PortB in w
			ANDlw	15				;nur untere 4bit zählen
			movwf	A				;nach A speichern
			movf	PortB, w		; portB in w laden
			ANDlw	11110000B		; nur obere 4 bit zählen
			movwf	B				; in B speichern
			swapf	B				; obere 4bit nach unten schieben
			
			movf	PortA, w		; PortA in w laden
			movwf	S				; w (also PortA) in s speichern
			rlf		S
			rlf		S
			rlf		S				; bit6 und bit7 auf 0 und 1 schieben
			movf	S, w 			; ergebnis nach w schreiben
			ANDlw	00000011B		; nur untere 2 bits sind relevant
			addwf	pcl				; wert zum pc addieren --> Sprungtabelle
			goto	Akomp
			goto	AxorB
			goto	AorB
			goto	AandB
			
AandB		movf	A, w
			andwf	B, w			; A mit B in w verunden
			iorlw	11000000B		; Schalterbits 6 und 7 entsprechend setzen wie sie davor waren
			movwf	PortA			; Ergebnis auf PortA ausgeben
			goto 	go				; and again

AorB		movf	A, w
			iorwf	B, w			; A mit B in w verodern
			iorlw	10000000B		; Schalterbits 6 und 7 entsprechend setzen wie sie davor waren
			movwf	PortA			; Ergebnis auf PortA ausgeben
			goto 	go				; wir stecken in einer Schleife
			
AxorB		movf	A, w
			xorwf	B, w			; A und B in w verxoren
			andlw	3FH				; nur untere 6 bit gülitg (obere 2 bits auf 0)
			iorlw	01000000B		; Schalterbits 6 und 7 entsprechend setzen wie sie davor waren
			movwf	PortA			; Ergebnis auf PortA ausgeben
			goto 	go				; loop it
			
Akomp		comf	A				; 1er Komplement von A
			incf	A				; +1 makes it a 2erKomplement
			movf	A, w			; nach w
			andlw	0FH				; nur utnere 4 bit gültig
			;iorlw	0				; Schalterbits 6 und 7 entsprechend setzen wie sie davor waren
			movwf 	PortA			; Ergebnis auf PortA ausgeben
			goto 	go				; round and round it goes